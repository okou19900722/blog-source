<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <parent>
    <artifactId>vertx-future-wrapper-parent</artifactId>
    <groupId>tk.okou</groupId>
    <version>1.0-SNAPSHOT</version>
    <relativePath>../</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>

  <artifactId>vertx-future-wrapper</artifactId>

  <dependencies>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-codegen</artifactId>
      <version>${vertx.version}</version>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-docgen</artifactId>
      <version>${vertx.docgen.version}</version>
    </dependency>
    <dependency>
      <groupId>tk.okou</groupId>
      <artifactId>vertx-future-wrapper-gen</artifactId>
      <version>1.0-SNAPSHOT</version>
    </dependency>

    <!--下面是需要解压并执行codegen的包，我们需要依赖的是sources源码-->
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-core</artifactId>
      <version>${vertx.version}</version>
      <classifier>sources</classifier>
      <optional>true</optional>
    </dependency>

    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-redis-client</artifactId>
      <version>${vertx.version}</version>
      <classifier>sources</classifier>
      <optional>true</optional>
    </dependency>
    <dependency>
      <groupId>io.vertx</groupId>
      <artifactId>vertx-redis-client</artifactId>
      <version>${vertx.version}</version>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.2</version>
        <configuration>
          <includeGroupIds>io.vertx</includeGroupIds>
          <!--这里配置的是需要解压的包-->
          <includeArtifactIds>
            vertx-core,
            vertx-redis-client,
          </includeArtifactIds>
          <classifier>sources</classifier>
          <includeTypes>jar</includeTypes>
        </configuration>
        <executions>
          <execution>
            <id>unpack-java</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <configuration>
              <includes>io/vertx/**/*.java</includes>
              <excludes>**/impl/**/*.java,**/logging/**/*.java,io/vertx/groovy/**,io/vertx/reactivex/**,io/vertx/rxjava/**,examples/**</excludes>
              <outputDirectory>${project.build.directory}/sources/java</outputDirectory>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.bsc.maven</groupId>
        <artifactId>maven-processor-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <systemProperties>
            <java.util.logging.SimpleFormatter.format>%4$s: %3$s - %5$s %6$s%n</java.util.logging.SimpleFormatter.format>
            <mvel2.disable.jit>true</mvel2.disable.jit>
          </systemProperties>
        </configuration>
        <executions>
          <!-- Run the annotation processor on java sources and generate the API -->
          <execution>
            <id>generate-api</id>
            <goals>
              <goal>process</goal>
            </goals>
            <phase>generate-sources</phase>
            <configuration>
              <sourceDirectory>${project.build.directory}/sources/java</sourceDirectory>
              <processors>
                <processor>io.vertx.codegen.CodeGenProcessor</processor>
              </processors>
              <optionMap>
                <codegen.generators>FutureWrapper</codegen.generators>
              </optionMap>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>
